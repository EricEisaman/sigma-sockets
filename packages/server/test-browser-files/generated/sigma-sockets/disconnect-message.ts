// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'https://unpkg.com/flatbuffers@2.0.0/flatbuffers.mjs';

export class DisconnectMessage {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):DisconnectMessage {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsDisconnectMessage(bb:flatbuffers.ByteBuffer, obj?:DisconnectMessage):DisconnectMessage {
  return (obj || new DisconnectMessage()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsDisconnectMessage(bb:flatbuffers.ByteBuffer, obj?:DisconnectMessage):DisconnectMessage {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new DisconnectMessage()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

reason():string|null
reason(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
reason(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startDisconnectMessage(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addReason(builder:flatbuffers.Builder, reasonOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, reasonOffset, 0);
}

static endDisconnectMessage(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createDisconnectMessage(builder:flatbuffers.Builder, reasonOffset:flatbuffers.Offset):flatbuffers.Offset {
  DisconnectMessage.startDisconnectMessage(builder);
  DisconnectMessage.addReason(builder, reasonOffset);
  return DisconnectMessage.endDisconnectMessage(builder);
}
}
