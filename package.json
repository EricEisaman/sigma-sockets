{
  "name": "sigmasockets-monorepo",
  "version": "1.0.0",
  "description": "High-performance WebSocket system with FlatBuffers serialization",
  "type": "module",
  "private": true,
  "workspaces": [
    "packages/*",
    "demos/*",
    "apps/*"
  ],
  "scripts": {
    "// === CORE WORKFLOW SCRIPTS ===": "",
    "install:all": "npm install && npm run install:workspaces",
    "install:workspaces": "npm install --workspaces",
    "build": "npm run build:packages && npm run build:apps",
    "build:packages": "npm run build:types && npm run build:client && npm run build:server",
    "build:apps": "npm run build:chat && npm run build:benchmark",
    "dev": "npm run dev:packages",
    "dev:packages": "npm run dev:types & npm run dev:client & npm run dev:server",
    "test": "npm run test:packages && npm run test:apps",
    "test:packages": "npm run test:types && npm run test:client && npm run test:server",
    "test:apps": "npm run test:chat && npm run test:benchmark",
    "test:run": "npm run test:run --workspaces --if-present",
    "test:watch": "npm run test:watch --workspaces --if-present",
    "test:ui": "npm run test:ui --workspaces --if-present",
    "test:coverage": "npm run test:coverage --workspaces --if-present",
    "lint": "eslint . --ext .ts,.js,.jsx",
    "lint:fix": "eslint . --ext .ts,.js,.jsx --fix",
    "type-check": "npm run type-check --workspaces --if-present",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "clean": "npm run clean:workspaces && npm run clean:root",
    "clean:workspaces": "npm run clean --workspaces --if-present",
    "clean:root": "rm -rf node_modules dist build coverage .turbo",
    "cleanup:ports": "./scripts/cleanup-ports.sh",
    "fresh": "npm run clean && npm run install:all",
    "// === PACKAGE-SPECIFIC BUILD SCRIPTS ===": "",
    "build:types": "npm run build --workspace=packages/types",
    "build:client": "npm run build --workspace=packages/client",
    "build:server": "npm run build --workspace=packages/server",
    "build:chat": "npm run build --workspace=demos/chat",
    "build:benchmark": "npm run build --workspace=apps/benchmark",
    "// === PACKAGE-SPECIFIC DEV SCRIPTS ===": "",
    "dev:types": "npm run dev --workspace=packages/types",
    "dev:client": "npm run dev --workspace=packages/client",
    "dev:server": "npm run dev --workspace=packages/server",
    "dev:chat": "npm run cleanup:ports && npm run dev --workspace=demos/chat",
    "dev:chat:server": "npm run dev:server --workspace=demos/chat",
    "dev:chat:client": "npm run dev:client --workspace=demos/chat",
    "dev:benchmark": "npm run dev --workspace=apps/benchmark",
    "// === PACKAGE-SPECIFIC TEST SCRIPTS ===": "",
    "test:types": "npm run test --workspace=packages/types",
    "test:client": "npm run test --workspace=packages/client",
    "test:server": "npm run test --workspace=packages/server",
    "test:chat": "npm run test --workspace=demos/chat",
    "test:benchmark": "npm run test --workspace=apps/benchmark",
    "// === DEMO & APP MANAGEMENT ===": "",
    "demo:chat": "npm run dev:chat",
    "benchmark:run": "npm run benchmark:build && npm run benchmark:execute",
    "benchmark:build": "npm run build:benchmark",
    "benchmark:execute": "npm run benchmark --workspace=apps/benchmark",
    "benchmark:client": "npm run benchmark:client --workspace=apps/benchmark",
    "benchmark:server": "npm run benchmark:server --workspace=apps/benchmark",
    "benchmark:report": "npm run benchmark:build && cd apps/benchmark && npm run benchmark && echo 'ðŸ“Š Benchmark report generated in apps/benchmark/'",
    "benchmark:demo": "npm run benchmark:build && cd apps/benchmark && npm run benchmark:demo && echo 'ðŸ“Š Benchmark demo report generated in apps/benchmark/'",
    "// === PUBLISHING & RELEASE MANAGEMENT ===": "",
    "version:patch": "npm run publish:all patch",
    "version:minor": "npm run publish:all minor",
    "version:major": "npm run publish:all major",
    "release": "npm run build && npm run test && npm run publish:all",
    "release:dry-run": "npm run build && npm run test && npm run publish:dry-run",
    "// === DEVELOPMENT TOOLS ===": "",
    "deps:check": "npm outdated --workspaces",
    "deps:update": "npm update --workspaces",
    "deps:audit": "npm audit --workspaces",
    "deps:fix": "npm audit fix --workspaces",
    "deps:install:clean": "rm -rf node_modules package-lock.json && npm install",
    "workspace:list": "npm ls --workspaces",
    "workspace:info": "npm run workspace:list && echo '\\n=== Workspace Status ===' && npm run build:packages",
    "// === QUALITY ASSURANCE ===": "",
    "qa": "node scripts/qa.js",
    "qa:timeout": "node scripts/qa.js",
    "qa:quick": "npm run type-check && npm run lint",
    "qa:full": "npm run clean && npm run install:all && npm run qa",
    "ci": "npm run qa:full",
    "precommit": "npm run qa:quick",
    "prepush": "npm run qa",
    "// === UTILITY SCRIPTS ===": "",
    "size": "npm run build && du -sh packages/*/dist demos/*/dist apps/*/dist",
    "size:client": "npm run build:client && du -sh packages/client/dist",
    "size:server": "npm run build:server && du -sh packages/server/dist",
    "docs": "npm run docs:generate",
    "docs:generate": "echo 'Documentation generation not yet implemented'",
    "restart-ts": "node scripts/restart-ts-server.js --restart-ts",
    "generate:flatbuffers": "node scripts/generate-flatbuffers.js",
    "docs:serve": "echo 'Documentation serving not yet implemented'",
    "logs": "npm run logs:clear",
    "logs:clear": "echo 'Clearing logs...' && find . -name '*.log' -delete",
    "backup": "npm run backup:create",
    "backup:create": "tar -czf sigmasockets-backup-$(date +%Y%m%d-%H%M%S).tar.gz --exclude=node_modules --exclude=dist --exclude=.git .",
    "// === PERFORMANCE & MONITORING ===": "",
    "perf": "npm run benchmark:run",
    "perf:client": "npm run benchmark:client",
    "perf:server": "npm run benchmark:server",
    "monitor": "npm run monitor:start",
    "monitor:start": "echo 'Performance monitoring not yet implemented'",
    "profile": "npm run profile:start",
    "profile:start": "echo 'Profiling not yet implemented'",
    "// === DEPLOYMENT & INFRASTRUCTURE ===": "",
    "deploy": "npm run deploy:build && npm run deploy:upload",
    "deploy:build": "npm run build && npm run test",
    "deploy:upload": "echo 'Deployment upload not yet implemented'",
    "deploy:render": "./scripts/deploy-render.sh",
    "deploy:render:test": "./scripts/deploy-render.sh --test",
    "docker": "npm run docker:build",
    "docker:build": "docker build -t sigmasockets-chat .",
    "docker:run": "docker run -p 3000:3000 -p 3001:3001 sigmasockets-chat",
    "docker:test": "npm run docker:build && npm run docker:run",
    "// === GIT & VERSION CONTROL ===": "",
    "git:status": "git status --porcelain",
    "git:clean": "git clean -fd",
    "git:reset": "git reset --hard HEAD",
    "git:sync": "git pull && git push",
    "git:branch": "git branch -a",
    "git:log": "git log --oneline -10",
    "// === GITHUB CLI AUTHENTICATION ===": "",
    "gh:auth": "gh auth login --web",
    "gh:status": "gh auth status",
    "gh:logout": "gh auth logout",
    "gh:token": "gh auth token",
    "gh:whoami": "gh api user",
    "gh:repo": "gh repo view",
    "gh:issues": "gh issue list",
    "gh:prs": "gh pr list",
    "gh:create-issue": "gh issue create",
    "gh:create-pr": "gh pr create",
    "gh:sync": "gh repo sync",
    "gh:clone": "gh repo clone",
    "gh:fork": "gh repo fork",
    "gh:setup": "node scripts/github-setup.js",
    "gh:check": "node scripts/github-auth-check.js",
    "gh:integrate": "node scripts/github-integration.js",
    "// === SSH AUTHENTICATION ===": "",
    "ssh:test": "ssh -T git@github.com-ericeisaman",
    "ssh:config": "cat ~/.ssh/config | grep -A 5 -B 5 'github.com-ericeisaman'",
    "ssh:key": "ls -la ~/.ssh/id_ed25519_ericeisaman*",
    "ssh:setup": "echo 'SSH key already configured for github.com-ericeisaman'",
    "// === NPM AUTHENTICATION & PUBLISHING ===": "",
    "npm:setup": "node scripts/npm-setup.js",
    "npm:check": "node scripts/npm-auth-check.js",
    "npm:status": "npm whoami && echo 'Target: sirfizx' && echo 'Profile: https://www.npmjs.com/~sirfizx'",
    "npm:whoami": "npm whoami",
    "npm:login": "npm login",
    "npm:logout": "npm logout",
    "publish:all": "node scripts/publish.js",
    "publish:dry-run": "node scripts/publish.js --dry-run",
    "// === SETUP & INITIALIZATION ===": "",
    "setup": "node scripts/setup-dev.js",
    "setup:dev": "npm run setup",
    "init": "npm run setup",
    "workspace": "node scripts/workspace-manager.js",
    "ws": "npm run workspace",
    "// === BROWSER DEBUGGING ===": "",
    "browser:monitor": "node scripts/browser-console-monitor.js",
    "browser:test": "node scripts/test-chat-demo.js",
    "browser:debug": "node scripts/debug-chat-demo.js",
    "// === MEMORY & REMINDER SYSTEMS ===": "",
    "reminders": "node scripts/reminder-system.js",
    "memory": "node scripts/memory-injector.js",
    "activate": "npm run memory",
    "excellence": "node scripts/activate-excellence.js",
    "// === AUTO-ACTIVATION ===": "",
    "auto-test": "node scripts/auto-test.js",
    "user-activate": "node scripts/activate-for-user.js",
    "// === TODO MANAGEMENT ===": "",
    "todo:dashboard": "node scripts/todo-manager.js dashboard",
    "todo:add": "node scripts/todo-manager.js add",
    "todo:list": "node scripts/todo-manager.js list",
    "todo:complete": "node scripts/todo-manager.js complete",
    "todo:update": "node scripts/todo-manager.js update",
    "// === COMPLETION TRIGGER SYSTEM ===": "",
    "completion:trigger": "node scripts/completion-trigger.js",
    "completion:check": "node scripts/completion-trigger.js 'The SigmaSockets project now has'",
    "completion:improve": "node scripts/completion-trigger.js 'What Was Accomplished'",
    "completion:monitor": "node scripts/auto-completion-monitor.js start",
    "completion:monitor:stop": "node scripts/auto-completion-monitor.js stop",
    "completion:monitor:check": "node scripts/auto-completion-monitor.js check",
    "completion:monitor:trigger": "node scripts/auto-completion-monitor.js trigger",
    "response:monitor": "node scripts/response-monitor.js monitor",
    "response:check": "node scripts/response-monitor.js check",
    "response:save": "node scripts/response-monitor.js save",
    "response:get": "node scripts/response-monitor.js get",
    "response:clear": "node scripts/response-monitor.js clear",
    "intercept:start": "node scripts/response-interceptor.js start",
    "intercept:stop": "node scripts/response-interceptor.js stop",
    "intercept:check": "node scripts/response-interceptor.js check",
    "intercept:stats": "node scripts/response-interceptor.js stats",
    "intercept:clear": "node scripts/response-interceptor.js clear",
    "auto:enable": "node scripts/auto-response-monitor.js enable",
    "auto:disable": "node scripts/auto-response-monitor.js disable",
    "auto:status": "node scripts/auto-response-monitor.js status",
    "auto:check": "node scripts/auto-response-monitor.js check",
    "auto:trigger": "node scripts/auto-response-monitor.js trigger",
    "power:check": "node scripts/powerful-completion-detector.js check",
    "power:trigger": "node scripts/powerful-completion-detector.js trigger",
    "power:stop": "node scripts/powerful-completion-detector.js stop",
    "check:completion": "node scripts/check-completion.js",
    "test:completion": "node scripts/test-completion.js",
    "ai:trigger": "node scripts/cursor-ai-trigger.js trigger",
    "ai:check": "node scripts/cursor-ai-trigger.js check",
    "ai:clear": "node scripts/cursor-ai-trigger.js clear",
    "ai:handle": "node scripts/ai-response-handler.js handle",
    "ai:response": "node scripts/ai-response-handler.js check",
    "todo:work": "node scripts/work-on-todos.js work",
    "todo:progress": "node scripts/work-on-todos.js progress",
    "todo:cleanup": "node scripts/work-on-todos.js cleanup",
    "todo:monitor": "node scripts/work-on-todos.js monitor",
    "todo:test": "node scripts/test-work-on-todos.js",
    "radical:start": "node scripts/radical-completion-monitor.js start",
    "radical:stop": "node scripts/radical-completion-monitor.js stop",
    "radical:trigger": "node scripts/radical-completion-monitor.js trigger",
    "// === HELP & INFORMATION ===": "",
    "help": "npm run help:scripts",
    "help:scripts": "echo '\\n=== SigmaSockets Monorepo Scripts ===\\n' && npm run | grep -E '^  [a-z]' | head -20 && echo '\\nRun \"npm run help:all\" for complete list'",
    "help:all": "npm run | grep -E '^  [a-z]' | sort",
    "help:workspace": "node scripts/workspace-manager.js help",
    "info": "npm run info:project && npm run info:packages",
    "info:project": "echo '\\n=== Project Information ===' && echo 'Name: $(npm pkg get name | tr -d \",\")' && echo 'Version: $(npm pkg get version | tr -d \",\")' && echo 'Node: $(node --version)' && echo 'NPM: $(npm --version)'",
    "info:packages": "echo '\\n=== Package Information ===' && npm run workspace:list",
    "// === LEGACY & COMPATIBILITY ===": "",
    "prepublishOnly": "npm run build && npm run test"
  },
  "keywords": [
    "websocket",
    "flatbuffers",
    "realtime",
    "multiplayer",
    "performance",
    "typescript",
    "vite",
    "monorepo"
  ],
  "author": "Manus AI",
  "license": "MIT",
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/manus-ai/sigmasockets.git"
  },
  "devDependencies": {
    "@types/node": "^20.0.0",
    "@typescript-eslint/eslint-plugin": "^8.0.0",
    "@typescript-eslint/parser": "^8.0.0",
    "@vitest/ui": "^1.0.0",
    "eslint": "^9.0.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-prettier": "^5.0.0",
    "flatbuffers": "25.2.10",
    "prettier": "^3.0.0",
    "puppeteer": "24.19.0",
    "typescript": "^5.0.0",
    "vite": "^5.0.0",
    "vitest": "^1.0.0"
  }
}
