// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import { ConnectMessage } from './connect-message.js';
import { DataMessage } from './data-message.js';
import { DisconnectMessage } from './disconnect-message.js';
import { ErrorMessage } from './error-message.js';
import { HeartbeatMessage } from './heartbeat-message.js';
import { ReconnectMessage } from './reconnect-message.js';


export enum MessageData {
  NONE = 0,
  ConnectMessage = 1,
  DisconnectMessage = 2,
  DataMessage = 3,
  HeartbeatMessage = 4,
  ReconnectMessage = 5,
  ErrorMessage = 6
}

export function unionToMessageData(
  type: MessageData,
  accessor: (obj:ConnectMessage|DataMessage|DisconnectMessage|ErrorMessage|HeartbeatMessage|ReconnectMessage) => ConnectMessage|DataMessage|DisconnectMessage|ErrorMessage|HeartbeatMessage|ReconnectMessage|null
): ConnectMessage|DataMessage|DisconnectMessage|ErrorMessage|HeartbeatMessage|ReconnectMessage|null {
  switch(MessageData[type]) {
    case 'NONE': return null; 
    case 'ConnectMessage': return accessor(new ConnectMessage())! as ConnectMessage;
    case 'DisconnectMessage': return accessor(new DisconnectMessage())! as DisconnectMessage;
    case 'DataMessage': return accessor(new DataMessage())! as DataMessage;
    case 'HeartbeatMessage': return accessor(new HeartbeatMessage())! as HeartbeatMessage;
    case 'ReconnectMessage': return accessor(new ReconnectMessage())! as ReconnectMessage;
    case 'ErrorMessage': return accessor(new ErrorMessage())! as ErrorMessage;
    default: return null;
  }
}

export function unionListToMessageData(
  type: MessageData, 
  accessor: (index: number, obj:ConnectMessage|DataMessage|DisconnectMessage|ErrorMessage|HeartbeatMessage|ReconnectMessage) => ConnectMessage|DataMessage|DisconnectMessage|ErrorMessage|HeartbeatMessage|ReconnectMessage|null, 
  index: number
): ConnectMessage|DataMessage|DisconnectMessage|ErrorMessage|HeartbeatMessage|ReconnectMessage|null {
  switch(MessageData[type]) {
    case 'NONE': return null; 
    case 'ConnectMessage': return accessor(index, new ConnectMessage())! as ConnectMessage;
    case 'DisconnectMessage': return accessor(index, new DisconnectMessage())! as DisconnectMessage;
    case 'DataMessage': return accessor(index, new DataMessage())! as DataMessage;
    case 'HeartbeatMessage': return accessor(index, new HeartbeatMessage())! as HeartbeatMessage;
    case 'ReconnectMessage': return accessor(index, new ReconnectMessage())! as ReconnectMessage;
    case 'ErrorMessage': return accessor(index, new ErrorMessage())! as ErrorMessage;
    default: return null;
  }
}
